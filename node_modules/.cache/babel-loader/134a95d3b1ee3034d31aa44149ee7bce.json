{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Documentos/Unb/2020.1/PA/Grafos2_TWTR2/src/hooks/users.tsx\";\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { data } from './data';\nconst UsersContext = createContext({});\n\nconst UsersProvider = ({\n  children\n}) => {\n  // lista de adjacencia: === users\n  // [\n  // lucassiqz = users[0].following = [gui,caio],\n  // gui = users[1].following = [amigoGui],\n  // caio = users[2].following = [amigoCaio],\n  // ]\n  const [users, setUsers] = useState(data);\n  const [loggedUser, setLoggedUser] = useState(users[0]);\n  useEffect(() => {\n    const newLoggedUser = users.find(user => user.username === (loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.username));\n    setLoggedUser(newLoggedUser); // eslint-disable-next-line\n  }, [users]);\n  const cleanFollowersData = useCallback(BFSResult => {\n    return BFSResult.filter(node => node[1] === 2);\n  }, []);\n  const bfs = useCallback(startingNode => {\n    const graph = [];\n    const visited = [];\n\n    for (let i = 0; i < users.length; i++) {\n      visited[i] = false;\n    }\n\n    const queue = [];\n    const startingNodeIndex = users.findIndex(user => user.username === startingNode.username);\n    visited[startingNodeIndex] = true;\n    queue[0] = [startingNodeIndex, 0];\n\n    while (queue.length > 0) {\n      const getQueueElement = queue.shift();\n      graph.push(getQueueElement);\n      const getList = users[getQueueElement[0]].following;\n      getList.forEach(user => {\n        const neighIndex = users.findIndex(usr => usr.username === user.username);\n\n        if (!visited[neighIndex]) {\n          visited[neighIndex] = true;\n          const next = [neighIndex, getQueueElement[1] + 1];\n          queue[queue.length] = next;\n        }\n      });\n    }\n\n    const cleanGraph = cleanFollowersData(graph.slice(1));\n    return cleanGraph;\n  }, [users, cleanFollowersData]);\n  return /*#__PURE__*/React.createElement(UsersContext.Provider, {\n    value: {\n      users,\n      bfs,\n      setUsers,\n      loggedUser,\n      setLoggedUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nfunction useUsers() {\n  const context = useContext(UsersContext);\n\n  if (!context) {\n    throw new Error('useUsers must be used within a UsersProvider');\n  }\n\n  return context;\n}\n\nexport { UsersProvider, useUsers };","map":{"version":3,"sources":["/home/guilherme/Documentos/Unb/2020.1/PA/Grafos2_TWTR2/src/hooks/users.tsx"],"names":["React","createContext","useContext","useState","useCallback","useEffect","data","UsersContext","UsersProvider","children","users","setUsers","loggedUser","setLoggedUser","newLoggedUser","find","user","username","cleanFollowersData","BFSResult","filter","node","bfs","startingNode","graph","visited","i","length","queue","startingNodeIndex","findIndex","getQueueElement","shift","push","getList","following","forEach","neighIndex","usr","next","cleanGraph","slice","useUsers","context","Error"],"mappings":"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","sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useState,\n  useCallback,\n  useEffect,\n} from 'react';\n\nimport { data } from './data';\n\ninterface UsersContextData {\n  users: User[];\n  setUsers: React.Dispatch<React.SetStateAction<User[]>>;\n  loggedUser: User | null;\n  setLoggedUser: React.Dispatch<React.SetStateAction<User | null>>;\n  bfs(startingNode: User): number[][];\n}\n\ninterface FollowingType {\n  username: string;\n}\n\nexport interface User {\n  username: string;\n  completeName: string;\n  place?: string;\n  description?: string;\n  birth?: string;\n  following: FollowingType[];\n}\n\nconst UsersContext = createContext<UsersContextData>({} as UsersContextData);\n\nconst UsersProvider: React.FC = ({ children }) => {\n  // lista de adjacencia: === users\n  // [\n  // lucassiqz = users[0].following = [gui,caio],\n  // gui = users[1].following = [amigoGui],\n  // caio = users[2].following = [amigoCaio],\n  // ]\n\n  const [users, setUsers] = useState<User[]>(data);\n  const [loggedUser, setLoggedUser] = useState<User | null>(users[0]);\n\n  useEffect(() => {\n    const newLoggedUser = users.find(\n      (user) => user.username === loggedUser?.username,\n    );\n\n    setLoggedUser(newLoggedUser as User);\n\n    // eslint-disable-next-line\n  }, [users]);\n\n  const cleanFollowersData = useCallback(\n    (BFSResult: number[][]): number[][] => {\n      return BFSResult.filter((node) => node[1] === 2);\n    },\n    [],\n  );\n\n  const bfs = useCallback(\n    (startingNode: User): number[][] => {\n      const graph = [] as number[][];\n\n      const visited = [] as boolean[];\n\n      for (let i = 0; i < users.length; i++) {\n        visited[i] = false;\n      }\n\n      const queue = [] as number[][];\n\n      const startingNodeIndex = users.findIndex(\n        (user) => user.username === startingNode.username,\n      );\n\n      visited[startingNodeIndex] = true;\n\n      queue[0] = [startingNodeIndex, 0];\n\n      while (queue.length > 0) {\n        const getQueueElement = queue.shift() as number[];\n        graph.push(getQueueElement);\n\n        const getList = users[getQueueElement[0]].following;\n\n        getList.forEach((user) => {\n          const neighIndex = users.findIndex(\n            (usr) => usr.username === user.username,\n          );\n          if (!visited[neighIndex]) {\n            visited[neighIndex] = true;\n            const next = [neighIndex, getQueueElement[1] + 1];\n            queue[queue.length] = next;\n          }\n        });\n      }\n      const cleanGraph = cleanFollowersData(graph.slice(1));\n      return cleanGraph;\n    },\n    [users, cleanFollowersData],\n  );\n\n  return (\n    <UsersContext.Provider\n      value={{ users, bfs, setUsers, loggedUser, setLoggedUser }}\n    >\n      {children}\n    </UsersContext.Provider>\n  );\n};\n\nfunction useUsers(): UsersContextData {\n  const context = useContext(UsersContext);\n\n  if (!context) {\n    throw new Error('useUsers must be used within a UsersProvider');\n  }\n\n  return context;\n}\n\nexport { UsersProvider, useUsers };\n"]},"metadata":{},"sourceType":"module"}